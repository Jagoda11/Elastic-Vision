name: 🚀 Dependency Update and Vulnerability Scan

on:
  schedule:
      - cron: '0 0 1 * *'
  workflow_dispatch: # Allows manual triggering
 
jobs:
  update-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install Yarn
        run: npm install -g yarn

      # Install npm-check-updates for updating package.json
      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      # Frontend Updates
      - name: 🗑️ Remove yarn.lock (Frontend)
        run: rm -f frontend/yarn.lock

      - name: ⬆️ Update dependencies in package.json (Frontend)
        run: cd frontend && ncu -u

      - name: 📦 Install dependencies to generate yarn.lock (Frontend)
        run: cd frontend && yarn install

      # Backend Updates
      - name: 🗑️ Remove yarn.lock (Backend)
        run: rm -f backend/yarn.lock

      - name: ⬆️ Update dependencies in package.json (Backend)
        run: cd backend && ncu -u

      - name: 📦 Install dependencies to generate yarn.lock (Backend)
        run: cd backend && yarn install

      - name: 🎭 Mask Debricked credentials
        run: echo "::add-mask::${{ secrets.DEBRICKED_TOKEN }}"

      - name: Install Debricked CLI
        run: |
          curl -L https://github.com/debricked/cli/releases/latest/download/cli_linux_x86_64.tar.gz | tar -xz debricked
          sudo mv debricked /usr/local/bin/debricked

      - name: 🛡️ Debricked Vulnerability Scan
        run: |
          debricked scan -t ${{ secrets.DEBRICKED_TOKEN }} -r ${{ github.repository }} -c ${{ github.sha }}

      - name: 🏗️ Build project
        run: cd frontend && npm run build

      - name: ✅ Run tests
        run: cd frontend && npm test

      - name: ✅ Run tests
        run: cd backend && npm test
        
      - name: 📝 Commit changes if dependencies updated
        run: |
          git config --local user.name "Debugging Duck 🦆"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add frontend/yarn.lock frontend/package.json backend/yarn.lock backend/package.json
          git status
          # Check if there are changes, then commit
          if ! git diff-index --quiet HEAD; then
            echo "Committing updates..."
            git commit -m "⬆️ update all dependencies with yarn ⬆️"
          else
            echo "No changes to commit."
          fi

      - name: 🚀 Push changes
        if: success()
        run: git push

